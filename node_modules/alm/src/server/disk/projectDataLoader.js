"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fmc = require("./fileModelCache");
var tsconfig = require("../workers/lang/core/tsconfig");
var typescriptDir = require("../workers/lang/core/typeScriptDir");
/** Only call this if the file has been validated ðŸŒ¹ */
function getProjectDataLoaded(activeProjectConfigDetails) {
    var configFile = activeProjectConfigDetails.isVirtual
        ? tsconfig.getDefaultInMemoryProject(activeProjectConfigDetails.tsconfigFilePath)
        : tsconfig.getProjectSync(activeProjectConfigDetails.tsconfigFilePath).result;
    var response = {
        configFile: configFile,
        filePathWithContents: []
    };
    var addFile = function (filePath) {
        try {
            var contents = fmc.getOrCreateOpenFile(filePath).getContents();
            response.filePathWithContents.push({ filePath: filePath, contents: contents });
        }
        catch (e) {
            console.log("Project Data Loader: Failed to load data for file: " + filePath);
            console.log(e);
        }
    };
    // Add the `lib` files
    var libFiles = typescriptDir.getDefaultLibFilePaths(configFile.project.compilerOptions);
    libFiles.map(addFile);
    // Add all the files
    configFile.project.files.forEach(function (filePath) { return addFile(filePath); });
    return response;
}
exports.getProjectDataLoaded = getProjectDataLoaded;
